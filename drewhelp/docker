# export image as tar
# docker save
docker save IMGTAG > img.tar
docker save --output img.tar IMGTAG

# use `docker load` to import the tar (not import cuz it doesn't keep some metadata)
docker load -i f.tar

# does some of the cleaning 
# -f forces (no prompt)
docker image prune -fa --filter "until=72h"
docker container prune --filter "until=72h"

# does them all 
# -f forces (no prompt)
docker system prune -f --filter "until=72h"

# access host from inside container
host.docker.internal
host.containers.internal # for podman 

# block outgoing traffic
https://medium.com/@havloujian.joachim/advanced-docker-networking-outgoing-ip-921fc3090b09

# export container as image; prints new image sha256
docker commit $docker_ref

# full docker image registry URL
registry.hub.docker.com/library/IMAGE:TAG

# multi-architecture images
docker build -t rm --platform amd64 . 
docker build -t rm --platform linux/amd64 . 

# watchtower (lighthouse logo) update containers with single run
docker rm -f watchtower ; docker run -it -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once
docker ps --format "table {{.Image}}"
