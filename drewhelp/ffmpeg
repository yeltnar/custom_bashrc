# resize
ffmpeg -i input.jpg -vf scale=320:240 output_320x240.png
ffmpeg -i input.jpg -vf scale=320:-1 output_320x240.png # only one side

# trim runtime 
ffmpeg -i input.mp4 -ss 01:19:27 -to 02:18:51 -c:v copy -c:a copy output.mp4

# copy input direct to output 
ffmpeg -i input.mp4 -c:a copy -c:v copy output.mp4

# ffplay can be used basically the same as ffmpeg

# crop 
ffmpeg -i in.mp4 -filter:v "crop=out_w:out_h:x:y" out.mp4

# concat # https://stackoverflow.com/questions/7333232/how-to-concatenate-two-mp4-files-using-ffmpeg
# cat mylist.txt
# file '/path/to/file1'
# file '/path/to/file2'
# file '/path/to/file3'
ffmpeg -f concat -i mylist.txt -c copy output.mp4
ls . | awk -v q="'" '{print "file " q $0 q }'

# mute 
ffmpeg -i in.mp4 -c copy -an out.mp4

# pull out all the frames 
ffmpeg -i "$INPUT_FILE" frames/out-%03d.jpg

# overwrite exsisting file
ffmpeg -y -i input.flac output.mp3

# image input video output # 5 fps
ffmpeg -framerate 5 -pattern_type glob -i *.jpg -c:v libx264 -pix_fmt yuv420p out.mp4 
ffmpeg -framerate 5 -pattern_type glob -i '*.jpg' -c:v libx264 -pix_fmt yuv420p out.mp4 


# ffplay 
# Q, ESC - Exit
# F - Fullscreen
# P, Space - Time out
# W - Show Audio waveforms
# S - Display by frame
# Left direction key/right ARROW key - Back 10s/forward 10s
# Up ARROW/DOWN ARROW key - Back 1min/forward 1min
# Page Down/page up - Back 10min/forward 10min
# Mouse click Screen - Jumps to the specified position (based on the width of the mouse position relative to the screen)
