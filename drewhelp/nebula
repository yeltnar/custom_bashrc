# first party docs
https://www.defined.net/nebula/config/

# the orange one intro/setup
https://theorangeone.net/posts/nebula-intro/

# another config helper... this has systemd stuff
https://eliseomartelli.it/networking/2020/05/01/nebula/

# sign cert example
rm pixel6* ; ../nebula-cert sign -name "pixel6" -ip 10.0.0.2/24 -out-qr qr.ping -in-pub ./Share.data 

# how to do phone
# click Certificate
# Share Public Key (can send with any method... its a public key)
# run the following line to sign pixel6 with ip address 10.0.0.2 (capped at 24 devices) with the file Share.data containing the shared contetent from the app. The output qr code can be later scanned with the app
# `../nebula-cert sign -name "pixel6" -ip 10.0.0.2/24 -out-qr qr.ping -in-pub ./Share.data` 
# open the generated qr code and scan with phone, save
# go to CA, and enter file with any of the methods, save
# Hosts, Add a new entry
# enter Lighthouse IP, turn on Lighthouse switch
# enter ip address or dns name of lighthouse
# enter lighthouse's port, save


# put this for systemd in # /etc/systemd/system/drew-nebula.service

[Unit]
Description=Nebula Service
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
WorkingDirectory=/home/pi/nebula/exposed-pi
ExecStart=/home/pi/nebula/nebula -config ./config.yml

[Install]
WantedBy=multi-user.target

# dns querries... if you use resolveble address can deligete to nebula for nebula addresses 


# get ip address 
dig @10.10.10.1 +short mini A
# get cert info
dig @10.10.10.1 +short 10.10.10.1 TXT
dns_address="10.10.10.1"

for i in {1..16}; do
  address="10.10.10.$i"
	r=$(dig "@$dns_address" +short "$address" TXT) 
	if [ -n "$r" ]; then
		# echo "$r" > "$address"
		echo "$address:"
		echo "$r"
		echo
	fi
done

# dig @10.10.10.14 +short "10.10.10.1" TXT 
