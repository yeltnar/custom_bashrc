# manual(s)
# https://nixos.org/manual/nixos/stable
# https://nix.dev/manual/nix
# https://nixos.wiki
# _options_
# https://search.nixos.org/options
# _packages_
# https://search.nixos.org/packages 

# version / lifespan of releases
https://status.nixos.org/

# clear old generations 
sudo nix-collect-garbage --delete-older-than 14d

# recommeneded to sometimes run as sudo to collect additional garbage
# THIS DELETES ALL OLD ENTIRES 
sudo nix-collect-garbage -d

# list old generations 
nix-env --list-generations

nix-collect-garbage --delete-old

# delete specific generations  
nix-collect-garbage --delete-generations 1 2 3
sudo nix-collect-garbage --delete-older-than 14d

# rebuid, make bootable, but don't switch 
# should also rebuild grub.cfg, if just ran nix-collect-garbage
sudo nixos-rebuild boot

# rebuild, and use, but don't setup as boot 
sudo nixos-rebuild test

# FROM ANOTHER SET OF INSTRUCTIONS # As a separation of concerns - you will need to run this command to clean out boot
# sudo /run/current-system/bin/switch-to-configuration boot

# to use mullvad, must first start mullvad-daemon in the cli

# mulvad nixos package, from the large repo, installs a deb package 

#change update channel # dont need to update configuration.nix
sudo nix-channel --add https://nixos.org/channels/nixos-24.11 nixos
# switch the channel
nixos-rebuild switch --upgrade

# disk decryption at (after) boot
# https://nixos.wiki/wiki/Full_Disk_Encryption#Option_2:_Unlock_after_boot_using_crypttab_and_a_keyfile

# expose ports without rebuilding
nixos-firewall-tool

# `nix-env -iA XXX.neovim`, where XXX is channel from `nix-channel --list`

# how they setup packages 
https://nixos.org/guides/nix-pills/13-callpackage-design-pattern

# https://discourse.nixos.org/t/escaping-in-nixs-indented-strings/1201
# use 2 single quotes, with \ and char for literal char  
# find . | grep -v tests | awk ''\'/plugin.so/{ print "cp " $0 " $out/lib/nbdkit/plugins" }''\' | bash 

# when using nix-shell, persist PS1
export NIX_SHELL_PRESERVE_PROMPT=1;

# show why package is being installed
nix why-depends /run/current-system nixpkgs#neovim 

# allow dynamic libs 
# https://github.com/nix-community/nix-ld
# This setting will allow for dynamic libraries 
# programs.nix-ld.enable

# example of importing all nix file from given directory
imports =
  [ # Include the results of the hardware scan.
    /etc/nixos/hardware-configuration.nix
  ] 
  ++
  lib.fileset.toList (
    # All default.nix files in ./.
    # lib.fileset.fileFilter (file: file.name == "systemd-proxy.nix") /home/drew/playin/nixos_files/includes/systemd-proxy
    lib.fileset.fileFilter (file: file.hasExt "nix") /home/drew/playin/nixos_files/includes/systemd-proxy
  );

# nixos-rebuild build-vm
# can be started with ./result/bin/run-*-vm. 
# update this ^ file to change ram (-m) and number of cpu cores (-smp)

# graphically manage config and packages
# https://github.com/snowfallorg/nix-software-center
# https://github.com/snowfallorg/nixos-conf-editor


