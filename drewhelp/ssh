# ssh user file
/etc/ssh/sshd_config

# restart ssh daemon 
/sbin/service sshd restart

# enable sudo
/etc/sudoers

# ssh -i to use private key

# raspberry pi autostart sshd
touch /boot/ssh 

# add ssh key to non-mac
ssh-add -k ~/.ssh/

# add ssh key to mac
ssh-add --apple-use-keychain ~/.ssh/

# directory permissions
mkdir -p ~/.ssh && chmod 700 ~/.ssh

# ssh exposing the remote port locally 
ssh -L 8123:localhost:8123 user@server.lan

# ssh exposing localport on remote machine. 
# this will only be remotly accessable when accessing from first IP address
# /etc/ssh/sshd_config[.d/x.conf] must have GatewayPorts [yes|clientspecified] yes is all; clientspecified is syntax below 
ssh -R 10.10.10.1:9494:localhost:8123 user@site.com

# force interactive shell with COMMAND given
ssh -t user@host bash

# ssh config file
touch ~/.ssh/config
chmod 600 ~/.ssh/config

# public github keys
curl https://github.com/yeltnar.keys

# custom known hosts file 
ssh -o UserKnownHostsFile=/tmp/knownhosts  user@host

# remove hostkey for host with optional port
ssh-keygen -R host[:port]

# ssh config file contents
Host hostname1
    SSH_OPTION value
    SSH_OPTION value

Host dev
    HostName dev.example.com
    User john
    Port 2322

# ssh certificate authorities 
# https://goteleport.com/blog/how-to-configure-ssh-certificate-based-authentication/
ssh-keygen -s user_ca -I $HOSTNAME -n $USER1,$USER2 ~/.ssh/key.pub; ssh-keygen -L -f ~/.ssh/key-cert.pub
# example users
# u0_a156,u0_a139,drew,pi

# generate public key from private 
ssh-keygen -f ~/.ssh/id_rsa -y

# change for termux... make sure to adjust for username too
TrustedUserCaKeys /data/data/com.termux/files/usr/etc/ssh/user_ca.pub
