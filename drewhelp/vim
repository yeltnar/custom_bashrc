# great cheat sheet, with good links to others 
# it is saved in git pull backup on backup drive 
# https://github.com/bartkummel/vim-cheatsheet/blob/master/cheatsheet.pdf

# vim cheatsheet 
firefox https://vim.rtorr.com/ &

# another cheatsheet
https://www.phcomp.co.uk/Tutorials/Unix-And-Linux/Vi-and-vim-reference-sheet.html

# vim tricks
https://vimtricks.com/p/vim-jump-list/

# force case (capital C) 
/ignorecase\C

# ignore case (lowercase c)
/ignorecase\c

##### FIND AND REPLACE #####
# The general form of the substitute command is as follows:
:[range]s/{pattern}/{string}/[flags] [count]
# replace foo with bar
:s/foo/bar/
# end with g to replace all occurrences in the line
:s/foo/bar/g
# %s for all lines
:%s/foo/bar/g
# visual find and replace video
# https://youtu.be/v2a6Nv7RSd0

# macros
q[registry] to start recording

q to stop recording

@[registry] to play back recording
@@ to play back last recording

[number]@[registry] to play back recording [number] of times

# registers
:reg # show registers
"xy # yank into x register... use * or + for system clipboard
"*p # paste from system clipboard

# open Read Only mode
vim -R $FILE_NAME

# set syntax highlighting
:set syntax=html

# when in visual mode, highlight code, then `=` for auto formatting

# use ctrl+w to switch between panes in vim. Useful if have extra screen like TSPlayground 

# syntax and filetype must both be set to have good highlighting? 
# :syntax
# :filetype

# turn off line wrapping 
:set nowrap

# show parsed tree
:InspectTree
:TSPlaygroundToggle # deprecated

# read bash reaponse into buffer
:r !date | cat

# redo (opposit of u)
ctrl+r

# show current file path 
ctrl+g 

# show/hide file browser 
ctrl+n

# `!CMD` will run and print, but not replace 
# `%!CMD` to replace selected text with result of command 
# will replace selected text, if in visual mode 


# nvchad cheatsheet 
# LEADER [space] + ch

# look for leader maps 
rg -i leader ~/.local/share/nvim/lazy/NvChad/


# open list of marks
' [single quote]
'. [last change]

:WhichKey will show commands available 

norm
visual line select multiple lines
type ':' then type 'norm ' everything will be typed for each line... can do macros too 
:'<,'>norm _f:f"ldt"_lvt"yf:f"lP

# splits 
# :q to close split 
ctrl+w shows options
:split :sp
:vsplit :vsp
# with config, ctrl+h,j,k,l will move in directions

# create new file
:new # will create a split window with an unnamed buffer.
:enew # will open one in the current window.
:vnew # will open one in a vertically split window.
:tabnew # will open one in a new tab.

# incriment and decrement 
<C-a> and <C-x>

nvim surround 
    Old text                    Command         New text
--------------------------------------------------------------------------------
    surr*ound_words             ysiw)           (surround_words)
    *make strings               ys$"            "make strings"
    [delete ar*ound me!]        ds]             delete around me!
    remove <b>HTML t*ags</b>    dst             remove HTML tags
    'change quot*es'            cs'"            "change quotes"
    <b>or tag* types</b>        csth1<CR>       <h1>or tag types</h1>
    delete(functi*on calls)     dsf             function calls

# this will remove all nvim cache and saved settings 
rm -rf ~/.local/share/nvim* ; rm -rf ~/.local/state/nvim* ; rm -rf ~/.config/nvim/lazy-lock.json 
